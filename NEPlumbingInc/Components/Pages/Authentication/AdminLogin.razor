@rendermode InteractiveServer
@page "/admin-login"
@attribute [AllowAnonymous]
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
        <div class="card mt-5">
            <div class="card-header bg-primary text-white">
                <h3 class="card-title mb-0">Admin Login</h3>
            </div>
            <div class="card-body">
                <EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="adminLoginForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger mb-3" />

                    <div class="form-group mb-3">
                        <label for="username" class="form-label">Username:</label>
                        <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
                    </div>
                    <div class="form-group mb-3">
                        <label for="password" class="form-label">Password:</label>
                        <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">Login</button>
                    </div>
                </EditForm>

                @if (errorMessage != null)
                {
                    <div class="alert alert-danger mt-3" role="alert">
                        @errorMessage
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private AdminUser loginModel = new AdminUser();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        var admin = await AuthenticationService.LoginAsync(loginModel.Username, loginModel.Password);

        if (admin != null)
        {
            errorMessage = null;
            NavigationManager.NavigateTo("/admin-dashboard");
        }
        else
        {
            errorMessage = "Invalid credentials. Please try again.";
        }
    }
}