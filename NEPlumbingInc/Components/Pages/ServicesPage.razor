@page "/services"
@inject IServiceManager ServiceManager

<style>
    .modal.fade.show .modal-dialog {
        transform: translateY(0) scale(1);
        opacity: 1;
        transition: all 0.3s ease-in-out;
    }
</style>

<h1 class="text-center mb-5">Our Plumbing Services</h1>

<div class="container">
    <div class="row">
        @foreach (var service in services)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm" @onclick="() => OpenModal(service)">
                    @if (!string.IsNullOrEmpty(service.ServiceImage))
                    {
                        <img src="@service.ServiceImage" 
                             class="card-img-top" 
                             alt="@service.ServiceName"
                             style="height: 200px; object-fit: cover;"
                             @onerror="@(e => Console.WriteLine($"Image failed to load: {service.ServiceImage}"))" />
                    }
                    else
                    {
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                             style="height: 200px;">
                            <span class="text-muted">No image available</span>
                        </div>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@service.ServiceName</h5>
                        <p class="card-text text-truncate">@service.ServiceDescription</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (selectedService != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.6);">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@selectedService.ServiceName</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(selectedService.ServiceImage))
                    {
                        <img src="@selectedService.ServiceImage" alt="Service Image" class="img-fluid rounded mb-3" />
                    }

                    <p>@selectedService.ServiceDescription</p>

                    @if (selectedService.SubServices?.Any() == true)
                    {
                        <h5 class="mt-4">What’s Included</h5>
                        <ul class="list-group">
                            @foreach (var sub in selectedService.SubServices)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@sub.Name</strong><br />
                                        <small class="text-muted">@sub.Description</small>
                                    </div>
                                    <span class="badge bg-primary fs-6">@($"${sub.Price:F2}")</span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No detailed pricing available yet.</p>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<ServicesFormModel> services = new();
    private ServicesFormModel? selectedService;

    protected override async Task OnInitializedAsync()
    {
        services = (await ServiceManager.GetAllServicesAsync())
            .Where(s => s.IsActive)
            .ToList();

        // Debug output
        foreach (var service in services)
        {
            Console.WriteLine($"Service: {service.ServiceName}, Image: {service.ServiceImage}");
        }
    }

    private void OpenModal(ServicesFormModel service)
    {
        selectedService = service;
    }

    private void CloseModal()
    {
        selectedService = null;
    }
}